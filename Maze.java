
public class Maze {
	//1牆、 5起點、7終點
	public int width;
	public int height;
	
	public int[][] map ;
	int mapSpawn;
	

	public Maze() {
	
		mapSpawn = (int)(Math.random()*4+1);
		
		switch(mapSpawn) {
		case 1:
			map = new int[][]{
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 5, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1},
				{1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 1},
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}		
			};
			break;
		case 2:
			map = new int[][]{
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 5, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1},
				{1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 1},
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}		
			};
				
			break;
		case 3:
			map = new int[][]{
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1},
				{1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1},
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}		
			};
			break;
		case 4:
			map = new int[][]{
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1},
				{1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
				{1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
				{1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 1},
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		};			
			break;
		}
		this.width = map[0].length;
		this.height =map.length;

	}
	
	public void mazeBuild() {
		
	}

	
}
